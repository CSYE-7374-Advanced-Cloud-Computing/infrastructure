---
# tasks file for create-ec2

#get the security group
- name: get security ec2_group
  ec2_group_info:
    filters:
      "tag:name": ec2-sg
  register: sg

- name: Get all EC2 instances
  ec2_instance_info:
    filters:
      "tag:app": jenkins
      "instance-state-name": running
  register: all_ec2

- debug:
    var:
      all_ec2

#create ec2
- name: create ec2
  ec2:
    assign_public_ip: yes
    group: "{{ item.group_name }}"
    image: "{{ image_id }}"
    count_tag: app
    exact_count: 1
    instance_tags:
      "app": "jenkins"
    instance_type: t2.micro
    key_name: csye7374
    region: us-east-1
    vpc_subnet_id: "{{ subnet1.subnet.id }}"
    wait: true
  register: ec2
  with_items: "{{ sg.security_groups }}"
  when: all_ec2.instances | length == 0

- name: wait for instance to be created
  wait_for:
    host: "{{ item.instances[0]['public_dns_name'] }}"
    port: 22
    state: started
  with_items: "{{ ec2.results }}"
  when: all_ec2.instances | length == 0

- name: add hosts
  add_host:
    name: "{{ item.instances[0]['public_ip'] }}"
    groups: jenkinserver
    ansible_ssh_user: ubuntu
    ansible_ssh_host: "{{ item.instances[0]['public_dns_name']}}"
    ansible_ssh_private_key_file: "{{ keyfile }}"
  with_items: "{{ ec2.results }}"
  when: all_ec2.instances | length == 0

- name: update route 53 record
  route53:
    state: present
    zone: "{{ domain_name }}"
    record: "jenkins.{{ domain_name }}"
    type: A
    ttl: 60
    overwrite: yes
    value: "{{ item.instances[0]['public_ip'] }}"
    wait: yes
  with_items: "{{ ec2.results }}"
  when: all_ec2.instances | length == 0
